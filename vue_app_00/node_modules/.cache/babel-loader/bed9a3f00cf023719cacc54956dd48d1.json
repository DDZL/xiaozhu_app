{"remainingRequest":"G:\\project_vue\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!G:\\project_vue\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\project_vue\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue?vue&type=script&lang=js","dependencies":[{"path":"G:\\project_vue\\vue_app_00\\src\\components\\tabbar\\ShopCart.vue","mtime":1555147012000},{"path":"G:\\project_vue\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557370988000},{"path":"G:\\project_vue\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"G:\\project_vue\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //保存购物列表\n      allcb: false //全选状态 默认未选中\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    modifyItem: function modifyItem(e) {\n      //功能:如果用户选中商品，将当前商品对应对象\n      //     cb=true\n      //     如果用户取消选中 将当前商品对应对象\n      //     cb=false 50\n      //1:获取当前元素选中状态\n      var cb = e.target.checked; //2:获取当前元素对应商品对象\n      //2.1:获取当前元素下标   01\n\n      var i = e.target.dataset.i; //2.2:将数组下标对象\n\n      this.list[i].cb = cb; //3:修改商品对象cb 属性\n      //4:修改全选状态 true fales  17:32\n      //4.1:如果完成  累加计算\n      //4.2:创建变量count 保存累加和\n\n      var count = 0; //4.3:创建循环遍历所有元素\n      //4.4:获取cb如果值等于true count++\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.cb) {\n            count++;\n          }\n        } //4.5:如果count个数与数组长度一致\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (count == this.list.length) {\n        //console.log(\"全选选中\");\n        this.allcb = true;\n      } else {\n        //console.log(\"全选消空\");\n        this.allcb = false;\n      } //4.6:将全选复选框选中\n      //4.7:否则清空全选复选框\n\n    },\n    removeSelect: function removeSelect() {\n      var _this = this;\n\n      //console.log(\"删除选中的商品\");\n      //-1:显示确认框 \"是否删除选中商品\"\n      this.$messagebox.confirm(\"是否删除选中商品?\").then(function (action) {\n        // console.log(\"确认\")\n        //-2:如果用户选中 确认\n        //2.1:获取用户选中商品\n        //-创建变量保存删除商品 ids = \"\"\n        var ids = \"\"; //-创建循环遍历数组\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var item = _step2.value;\n\n            if (item.cb) {\n              ids += item.id + \",\";\n            }\n          } //-如果用户没有选中商品,停止删除操作\n\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (ids.length == 0) {\n          _this.$toast(\"请选中您需要删除的商品\");\n\n          return;\n        } //-如果用户选中多个商品 1,2, 去除后面\n        //substring(?,?) 截取字符串\n        //? 起始位置\n        //? 几个\n\n\n        ids = ids.substring(0, ids.length - 1); //console.log(ids);\n        //return;\n        //-如果当前元素cb:true\n        //-获取当前元素id拼字符串 ids+=\"1\"\n        //2.2:创建变量  var ids = \"11,12\";\n        //var ids = \"1,2\";\n        //2.3:发送ajax请求给服务器 /delM\n\n        var url = \"http://127.0.0.1:3000\";\n        url += \"/delM?ids=\" + ids;\n\n        _this.axios.get(url).then(function (result) {\n          //console.log(result.data.msg);\n          //2.4:接收服务器返回结果 56\n          //2.5:提示   删除成功 或者删除失败\n          _this.$toast(result.data.msg); //2.6:重新加载购物车数据\n\n\n          _this.loadMore();\n        });\n      }).catch(function (result) {\n        console.log(\"取消\");\n      }); //3:如果用户选中 取消 \n    },\n    selectAll: function selectAll(e) {\n      //console.log(12345);\n      //1:获取全选状态\n      var cb = e.target.checked; //2:遍历所有商品\n      //3:将全选状态赋值商品选中状态\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cb = cb;\n        } //4:修改全选状态\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      this.allcb = cb;\n    },\n    removeItem: function removeItem(e) {\n      var _this2 = this;\n\n      //0:创建确认消息框\n      this.$messagebox.confirm(\"是否删除指定商品?\").then(function (action) {\n        //如果用户选择确定 \n        //功能:删除指定商品\n        //1:获取商品编号\n        var id = e.target.dataset.id; //2:创建变量url\n\n        var url = \"http://127.0.0.1:3000\";\n        url += \"/removeCartItem?id=\" + id; //3:发送ajax请求\n\n        _this2.axios.get(url).then(function (result) {\n          //4:获取返回结果\n          //5:判断如果删除成功\n          if (result.data.code == 1) {\n            _this2.$toast(\"删除成功\"); //数据库己经删除成功\n            //网页内容显示新内容[删除后];\n\n\n            _this2.loadMore(); //在页眉添加复选框 []全选\n\n          } else {\n            _this2.$toast(\"删除失败\");\n          } //6:将当前商品对象删除\n\n        });\n      }).catch(function (result) {//如果用户选择取消息\n      });\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      //1:创建变量url\n      var url = \"http://127.0.0.1:3000\";\n      url += \"/getCart\"; //2:发送ajax请求\n\n      this.axios.get(url).then(function (result) {\n        if (result.data.code < 1) {\n          _this3.$toast(\"请登录\");\n\n          _this3.$router.push(\"/Login\");\n\n          return;\n        } //2.1:为数组件元素添加属性cb\n        //    cb表示复选框状态\n        //2.2:原先数组\n\n\n        var rows = result.data.data; //2.3:创建循环遍历数组并且添加属性\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var item = _step4.value;\n            item.cb = false;\n          } //2.4:将添加结果后数组件赋值 list\n\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        _this3.list = rows; //注意:以上二步要求顺序\n      });\n    }\n  }\n};",{"version":3,"sources":["ShopCart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app-shopcart\">\r\n    <div class=\"mui-card\">\r\n\t\t\t\t<div class=\"mui-card-header\">\r\n          全选\r\n          <input type=\"checkbox\"  @change=\"selectAll\"\r\n          :checked=\"allcb\"/> \r\n        </div>\r\n\t\t\t\t<div class=\"mui-card-content\">\r\n\t\t\t\t\t<div class=\"mui-card-content-inner\">\r\n            <ul class=\"mui-table-view\">\r\n\t\t\t\t<li class=\"mui-table-view-cell mui-media\" v-for=\"(item,i) of list\" :key=\"item.id\">\r\n\t\t\t\t\t<a href=\"javascript:;\">\r\n\t\t\t\t\t\t<img class=\"mui-media-object mui-pull-left\" src=\"\">\r\n\t\t\t\t\t\t<div class=\"mui-media-body\">\r\n\t\t\t\t\t\t\t<p class='mui-ellipsis'>\r\n               <!--1:复选框-->\r\n               <input type=\"checkbox\" :checked=\"item.cb\" @change=\"modifyItem\"\r\n               :data-i=\"i\"\r\n               />\r\n               <!--2:商品名称 -->\r\n               {{item.lname}}\r\n               <!--3:商品价格-->\r\n               {{item.price}}\r\n               <!--4:删除按钮-->\r\n               <input type=\"button\" value=\"删除\" @click=\"removeItem\" :data-id=\"item.id\"/>\r\n              </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n        </ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"mui-card-footer\">\r\n  <input type=\"button\" value=\"删除选中商品\" @click=\"removeSelect\"/>\r\n        </div>\r\n\t\t\t</div>\r\n  </div>\r\n</template>\r\n<script>\r\n  export default {\r\n    data(){\r\n      return {\r\n        list:[],    //保存购物列表\r\n        allcb:false,//全选状态 默认未选中\r\n      }\r\n    },\r\n    created() {\r\n      this.loadMore();\r\n    },\r\n    methods:{\r\n      modifyItem(e){\r\n        //功能:如果用户选中商品，将当前商品对应对象\r\n        //     cb=true\r\n        //     如果用户取消选中 将当前商品对应对象\r\n        //     cb=false 50\r\n        //1:获取当前元素选中状态\r\n        var cb = e.target.checked;\r\n        //2:获取当前元素对应商品对象\r\n        //2.1:获取当前元素下标   01\r\n        var i = e.target.dataset.i;\r\n        //2.2:将数组下标对象\r\n        this.list[i].cb = cb;\r\n        //3:修改商品对象cb 属性\r\n        \r\n        //4:修改全选状态 true fales  17:32\r\n        //4.1:如果完成  累加计算\r\n        //4.2:创建变量count 保存累加和\r\n        var count = 0;\r\n        //4.3:创建循环遍历所有元素\r\n        //4.4:获取cb如果值等于true count++\r\n        for(var item of this.list){\r\n            if(item.cb){\r\n              count++;\r\n            }\r\n        }\r\n        //4.5:如果count个数与数组长度一致\r\n        if(count==this.list.length){\r\n          //console.log(\"全选选中\");\r\n          this.allcb = true\r\n        }else{\r\n          //console.log(\"全选消空\");\r\n          this.allcb = false;\r\n        }\r\n        //4.6:将全选复选框选中\r\n        //4.7:否则清空全选复选框\r\n\r\n\r\n      },\r\n      removeSelect(){\r\n        //console.log(\"删除选中的商品\");\r\n        //-1:显示确认框 \"是否删除选中商品\"\r\n      this.$messagebox.confirm(\"是否删除选中商品?\")\r\n      .then(action=>{\r\n         // console.log(\"确认\")\r\n         //-2:如果用户选中 确认\r\n         //2.1:获取用户选中商品\r\n         //-创建变量保存删除商品 ids = \"\"\r\n         var ids = \"\";\r\n         //-创建循环遍历数组\r\n         for(var item of this.list){\r\n             if(item.cb){\r\n               ids += item.id+\",\";\r\n             }\r\n         }\r\n         //-如果用户没有选中商品,停止删除操作\r\n         if(ids.length==0){\r\n           this.$toast(\"请选中您需要删除的商品\");\r\n           return;\r\n         }\r\n         //-如果用户选中多个商品 1,2, 去除后面\r\n         //substring(?,?) 截取字符串\r\n         //? 起始位置\r\n         //? 几个\r\n         ids =  ids.substring(0,ids.length-1);\r\n         //console.log(ids);\r\n         //return;\r\n         //-如果当前元素cb:true\r\n         //-获取当前元素id拼字符串 ids+=\"1\"\r\n         //2.2:创建变量  var ids = \"11,12\";\r\n         //var ids = \"1,2\";\r\n         //2.3:发送ajax请求给服务器 /delM\r\n         var url = \"http://127.0.0.1:3000\";\r\n         url+=\"/delM?ids=\"+ids;\r\n         this.axios.get(url).then(result=>{\r\n           //console.log(result.data.msg);\r\n           //2.4:接收服务器返回结果 56\r\n           //2.5:提示   删除成功 或者删除失败\r\n           this.$toast(result.data.msg);\r\n           //2.6:重新加载购物车数据\r\n           this.loadMore();\r\n         })\r\n      }).catch(result=>{\r\n          console.log(\"取消\")\r\n      });\r\n        \r\n        //3:如果用户选中 取消 \r\n      },\r\n      selectAll(e){\r\n        //console.log(12345);\r\n        //1:获取全选状态\r\n        var cb = e.target.checked;\r\n        //2:遍历所有商品\r\n        //3:将全选状态赋值商品选中状态\r\n        for(var item of this.list){\r\n          item.cb = cb;\r\n        }\r\n        //4:修改全选状态\r\n        this.allcb = cb;\r\n      },\r\n      removeItem(e){\r\n        //0:创建确认消息框\r\n      this.$messagebox.confirm(\"是否删除指定商品?\")\r\n      .then(action=>{\r\n        //如果用户选择确定 \r\n        //功能:删除指定商品\r\n        //1:获取商品编号\r\n        var id = e.target.dataset.id;\r\n        //2:创建变量url\r\n        var url = \"http://127.0.0.1:3000\";\r\n        url+=\"/removeCartItem?id=\"+id;\r\n        //3:发送ajax请求\r\n        this.axios.get(url).then(result=>{\r\n          //4:获取返回结果\r\n          //5:判断如果删除成功\r\n          if(result.data.code==1){\r\n             this.$toast(\"删除成功\");\r\n             //数据库己经删除成功\r\n             //网页内容显示新内容[删除后];\r\n             this.loadMore();\r\n             //在页眉添加复选框 []全选\r\n          }else{\r\n             this.$toast(\"删除失败\");\r\n          }\r\n          //6:将当前商品对象删除\r\n        })\r\n      })\r\n      .catch(result=>{\r\n      //如果用户选择取消息\r\n      })\r\n      },\r\n      loadMore(){\r\n        //1:创建变量url\r\n        var url = \"http://127.0.0.1:3000\";\r\n        url+=\"/getCart\";\r\n        //2:发送ajax请求\r\n        this.axios.get(url).then(result=>{\r\n          if(result.data.code < 1){\r\n            this.$toast(\"请登录\");\r\n            this.$router.push(\"/Login\");\r\n            return;\r\n          }\r\n          //2.1:为数组件元素添加属性cb\r\n          //    cb表示复选框状态\r\n          //2.2:原先数组\r\n          var rows = result.data.data;\r\n          //2.3:创建循环遍历数组并且添加属性\r\n          for(var item of rows){\r\n             item.cb = false;\r\n          }    \r\n          //2.4:将添加结果后数组件赋值 list\r\n          this.list = rows;\r\n          //注意:以上二步要求顺序\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n.mui-media-body{\r\n  height: 50px;\r\n  padding-top: 3px;\r\n}\r\n  .mui-ellipsis{\r\n    padding-top: 5px;\r\n  }\r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}